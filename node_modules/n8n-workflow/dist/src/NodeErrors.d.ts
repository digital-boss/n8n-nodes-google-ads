import { INode, JsonObject } from '.';
declare abstract class NodeError extends Error {
    description: string | null | undefined;
    cause: Error | JsonObject;
    node: INode;
    timestamp: number;
    constructor(node: INode, error: Error | JsonObject);
    protected findProperty(error: JsonObject, potentialKeys: string[], traversalKeys?: string[]): string | null;
    protected isTraversableObject(value: any): value is JsonObject;
    protected removeCircularRefs(obj: JsonObject, seen?: Set<unknown>): void;
}
export declare class NodeOperationError extends NodeError {
    constructor(node: INode, error: Error | string, options?: {
        description: string;
    });
}
export declare class NodeApiError extends NodeError {
    httpCode: string | null;
    constructor(node: INode, error: JsonObject, { message, description, httpCode, parseXml, }?: {
        message?: string;
        description?: string;
        httpCode?: string;
        parseXml?: boolean;
    });
    private setDescriptionFromXml;
    private setMessage;
}
export {};
